services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - tinder-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_DATABASE=${KEYCLOAK_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    command: start-dev --import-realm
    ports:
      - "8088:8080"
    depends_on:
      - postgres
    volumes:
      - ./keycloak-import:/opt/keycloak/data/import
    networks:
      - tinder-network

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - tinder-network

  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - KEYCLOAK_HOST=${KEYCLOAK_HOST}
      - KEYCLOAK_PORT=${KEYCLOAK_PORT}
      - PROFILES_HOST=${PROFILES_HOST}
      - PROFILES_PORT=${PROFILES_PORT}
      - REACTIONS_HOST=${REACTIONS_HOST}
      - REACTIONS_PORT=${REACTIONS_PORT}
      - RECOMMENDATIONS_HOST=${RECOMMENDATIONS_HOST}
      - RECOMMENDATIONS_PORT=${RECOMMENDATIONS_PORT}
      - MATCHES_HOST=${MATCHES_HOST}
      - MATCHES_PORT=${MATCHES_PORT}
    entrypoint: >
      sh -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"
    networks:
      - tinder-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - tinder-network
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - tinder-network

  mongodb:
    image: mongo:8
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - tinder-network

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  tinder-network:
    driver: bridge
    attachable: true
