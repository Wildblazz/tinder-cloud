name: Scan and Build Services

on:
  pull_request:
    paths:
      - 'be-components/**'

jobs:
  detect-changed-services:
    runs-on: [self-hosted, arm64]
    outputs:
      changed_services: ${{ steps.process-services.outputs.services }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get changed services
        id: changed-services
        uses: tj-actions/changed-files@v45
        with:
          files: be-components/**
          dir_names: true
          dir_names_max_depth: 2

      - name: Process changed services
        id: process-services
        run: |
          changed_dirs="${{ steps.changed-services.outputs.all_changed_files }}"
          services=""

          for dir in $changed_dirs; do
            service_name=$(basename "$dir")
            if [ "$service_name" != "be-components" ] && [ "$service_name" != "gradle" ] && [ -d "be-components/$service_name" ] && [ -f "be-components/$service_name/build.gradle.kts" ]; then
              services="$services $service_name"
            fi
          done

          services=$(echo "$services" | tr ' ' '\n' | sort -u | tr '\n' ' ' | xargs)
          echo "services=$services" >> $GITHUB_OUTPUT
          echo "Changed services: $services"

  trivy-scan:
    runs-on: [ self-hosted, arm64 ]
    needs: detect-changed-services
    if: needs.detect-changed-services.outputs.changed_services != ''
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Resolve Gradle dependencies
        working-directory: be-components
        run: |
          ./gradlew build --no-daemon -x test || true
          ./gradlew dependencies --configuration runtimeClasspath > gradle-dependencies.txt || true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: 'be-components'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: false  # Changed to detect more vulnerabilities
          scanners: 'vuln'
          skip-dirs: 'build/classes,build/tmp,build/kotlin'

      - name: Run Trivy with table output for debugging
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: 'be-components'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: false
          scanners: 'vuln'
          skip-dirs: 'build/classes,build/tmp,build/kotlin'

      - name: Upload Trivy scan results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

#  codeql-scan:
#    runs-on: [self-hosted, x64]
#    needs: detect-changed-services
#    if: needs.detect-changed-services.outputs.changed_services != ''
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Setup JDK 21
#        uses: actions/setup-java@v5
#        with:
#          distribution: temurin
#          java-version: 21
#
#      - name: Make gradlew executable
#        run: chmod +x be-components/gradlew
#
#      - name: Cache Gradle
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-arm64-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle-wrapper.properties') }}
#
#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v3
#        with:
#          languages: java-kotlin
#          queries: security-extended,security-and-quality
#
#      - name: Build for CodeQL
#        working-directory: be-components
#        run: |
#          services="${{ needs.detect-changed-services.outputs.changed_services }}"
#          build_tasks=""
#          for service in $services; do
#            build_tasks="$build_tasks :$service:build"
#          done
#          ./gradlew $build_tasks -x test --parallel --build-cache
#
#      - name: Perform CodeQL Analysis
#        uses: github/codeql-action/analyze@v3
#
#  test-and-build:
#    runs-on: [self-hosted, arm64]
#    needs: [detect-changed-services, trivy-scan, codeql-scan]
#    if: always() && needs.detect-changed-services.outputs.changed_services != ''
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Setup JDK 21
#        uses: actions/setup-java@v5
#        with:
#          distribution: temurin
#          java-version: 21
#
#      - name: Make gradlew executable
#        run: chmod +x be-components/gradlew
#
#      - name: Cache Gradle
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-arm64-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle-wrapper.properties') }}
#
#      - name: Run tests and build
#        working-directory: be-components
#        run: |
#          services="${{ needs.detect-changed-services.outputs.changed_services }}"
#          for service in $services; do
#            echo "Testing and building service: $service"
#            ./gradlew :$service:test :$service:build --parallel --build-cache
#          done

  cleanup:
    runs-on: [self-hosted, arm64]
#    needs: [trivy-scan, codeql-scan, test-and-build]
    needs: [trivy-scan]
    if: always()
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x be-components/gradlew

      - name: Cleanup Gradle
        working-directory: be-components
        run: |
          ./gradlew clean --stop || true
        continue-on-error: true
