server:
  port: 8082

keycloak:
  base-url: ${KEYCLOAK_BASE_URL:http://localhost:8088}
  realm: ${KEYCLOAK_REALM:tinder}
  admin-url: ${keycloak.base-url}${KEYCLOAK_ADMIN_PATH:/admin/realms/}${keycloak.realm}
  issuer-url: ${keycloak.base-url}${KEYCLOAK_ISSUER_PATH:/realms/}${keycloak.realm}

spring:
  application:
    name: profile-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak.issuer-url}${KEYCLOAK_JWK_PATH:/protocol/openid-connect/certs}
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}
            client-secret: ${KEYCLOAK_SECRET}
            authorization-grant-type: client_credentials
            scope: openid,profile,email
            redirect-uri: ${keycloak.base-url}${KEYCLOAK_REDIRECT_PATH:/login/oauth2/code/keycloak}
        provider:
          keycloak:
            issuer-uri: ${keycloak.issuer-url}
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/profiles}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # File upload configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# MinIO configuration
minio:
  endpoint: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket-name: profile-photos

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
