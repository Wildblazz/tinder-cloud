name: Scan and Build Services

on:
  pull_request:
    paths:
      - 'be-components/**'

jobs:
  detect-changed-services:
    runs-on: [self-hosted, arm64]
    outputs:
      changed_services: ${{ steps.process-services.outputs.services }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get changed services
        id: changed-services
        uses: tj-actions/changed-files@v45
        with:
          files: be-components/**
          dir_names: true
          dir_names_max_depth: 2

      - name: Process changed services
        id: process-services
        run: |
          changed_dirs="${{ steps.changed-services.outputs.all_changed_files }}"
          services=""

          for dir in $changed_dirs; do
            service_name=$(basename "$dir")
            if [ "$service_name" != "be-components" ] && [ "$service_name" != "gradle" ] && [ -d "be-components/$service_name" ] && [ -f "be-components/$service_name/build.gradle.kts" ]; then
              services="$services $service_name"
            fi
          done

          services=$(echo "$services" | tr ' ' '\n' | sort -u | tr '\n' ' ' | xargs)
          echo "services=$services" >> $GITHUB_OUTPUT
          echo "Changed services: $services"

  trivy-scan:
    runs-on: [ self-hosted, arm64 ]
    needs: detect-changed-services
    if: needs.detect-changed-services.outputs.changed_services != ''
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    env:
      TRIVY_CACHE_DIR: .trivy-cache
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('be-components/**/*.gradle*', 'be-components/**/gradle-wrapper.properties') }}

      - name: Cache Trivy
        uses: actions/cache@v4
        with:
          path: .trivy-cache
          key: trivy-${{ runner.os }}

      - name: Build changed modules (produce JARs)
        working-directory: be-components
        run: |
          services="${{ needs.detect-changed-services.outputs.changed_services }}"
          tasks=""
          for s in $services; do
            tasks="$tasks :$s:build"
          done
          echo "Running: ./gradlew $tasks -x test"
          ./gradlew $tasks -x test --no-daemon

      - name: Generate CycloneDX SBOMs
        working-directory: be-components
        run: |
          services="${{ needs.detect-changed-services.outputs.changed_services }}"
          sbomTasks=""
          for s in $services; do
            # task name depends on plugin; usually 'cyclonedxBom'
            sbomTasks="$sbomTasks :$s:cyclonedxBom"
          done
          ./gradlew $sbomTasks --no-daemon || exit 1
          find . -path "*/build/reports/*bom.json" -maxdepth 6 -print

      - name: Trivy filesystem scan (all severities first pass)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: 'be-components'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          ignore-unfixed: false
          scanners: 'vuln'
          skip-dirs: 'be-components/**/build/classes,be-components/**/build/tmp,be-components/**/build/kotlin'

      - name: Trivy SBOM scan (per module)
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          out="trivy-sbom-results.sarif"
          tmp="tmp-sbom.sarif"
          echo "[]" > combined.json
          for bom in $(find be-components -path "*/build/reports/*bom.json"); do
            echo "Scanning SBOM $bom"
            trivy sbom --format sarif --output "$tmp" "$bom"
            # naive combine (each SARIF separate upload is also fine)
            jq -s '.[0].runs += .[1].runs | .[0]' combined.json "$tmp" > merged.json || cp "$tmp" merged.json
            mv merged.json combined.json
          done
          mv combined.json "$out"
          echo "SBOM SARIF at $out"

      - name: Upload FS SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs-results.sarif
          category: trivy-fs

      - name: Upload SBOM SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-sbom-results.sarif
          category: trivy-sbom
  #  codeql-scan:
  #    runs-on: [self-hosted, x64]
  #    needs: detect-changed-services
  #    if: needs.detect-changed-services.outputs.changed_services != ''
  #    permissions:
  #      actions: read
  #      contents: read
  #      security-events: write
  #    steps:
  #      - name: Checkout repo
  #        uses: actions/checkout@v4
  #
  #      - name: Setup JDK 21
  #        uses: actions/setup-java@v5
  #        with:
  #          distribution: temurin
  #          java-version: 21
  #
  #      - name: Make gradlew executable
  #        run: chmod +x be-components/gradlew
  #
  #      - name: Cache Gradle
  #        uses: actions/cache@v4
  #        with:
  #          path: |
  #            ~/.gradle/caches
  #            ~/.gradle/wrapper
  #          key: gradle-arm64-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle-wrapper.properties') }}
  #
  #      - name: Initialize CodeQL
  #        uses: github/codeql-action/init@v3
  #        with:
  #          languages: java-kotlin
  #          queries: security-extended,security-and-quality
  #
  #      - name: Build for CodeQL
  #        working-directory: be-components
  #        run: |
  #          services="${{ needs.detect-changed-services.outputs.changed_services }}"
  #          build_tasks=""
  #          for service in $services; do
  #            build_tasks="$build_tasks :$service:build"
  #          done
  #          ./gradlew $build_tasks -x test --parallel --build-cache
  #
  #      - name: Perform CodeQL Analysis
  #        uses: github/codeql-action/analyze@v3
  #
  #  test-and-build:
  #    runs-on: [self-hosted, arm64]
  #    needs: [detect-changed-services, trivy-scan, codeql-scan]
  #    if: always() && needs.detect-changed-services.outputs.changed_services != ''
  #    steps:
  #      - name: Checkout repo
  #        uses: actions/checkout@v4
  #
  #      - name: Setup JDK 21
  #        uses: actions/setup-java@v5
  #        with:
  #          distribution: temurin
  #          java-version: 21
  #
  #      - name: Make gradlew executable
  #        run: chmod +x be-components/gradlew
  #
  #      - name: Cache Gradle
  #        uses: actions/cache@v4
  #        with:
  #          path: |
  #            ~/.gradle/caches
  #            ~/.gradle/wrapper
  #          key: gradle-arm64-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle-wrapper.properties') }}
  #
  #      - name: Run tests and build
  #        working-directory: be-components
  #        run: |
  #          services="${{ needs.detect-changed-services.outputs.changed_services }}"
  #          for service in $services; do
  #            echo "Testing and building service: $service"
  #            ./gradlew :$service:test :$service:build --parallel --build-cache
  #          done

  cleanup:
    runs-on: [self-hosted, arm64]
    #    needs: [trivy-scan, codeql-scan, test-and-build]
    needs: [trivy-scan]
    if: always()
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x be-components/gradlew

      - name: Cleanup Gradle
        working-directory: be-components
        run: |
          ./gradlew clean --stop || true
        continue-on-error: true
