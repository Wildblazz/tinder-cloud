name: Scan and Build Services

on:
  pull_request:
    paths:
      - 'be-components/**'

jobs:
  security-scan:
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21

      - name: Make gradlew executable
        run: chmod +x be-components/gradlew

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle-wrapper.properties') }}

      - name: Cache OWASP NVD Database
        uses: actions/cache@v4
        with:
          path: ~/.gradle/dependency-check-data
          key: owasp-nvd-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            owasp-nvd-${{ runner.os }}-

      - name: Run OWASP Dependency Check
        working-directory: be-components
        run: |
          ./gradlew dependencyCheckAggregate \
            --info \
            --stacktrace \
            -Dorg.gradle.daemon=false
        continue-on-error: true

      - name: Upload OWASP Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-dependency-check-reports
          path: |
            be-components/build/reports/
            be-components/*/build/reports/
          retention-days: 30

      - name: Check for High/Critical Vulnerabilities
        working-directory: be-components
        run: |
          if [ -f "build/reports/dependency-check-report.json" ]; then
            high_critical=$(grep -o '"severity":"HIGH\|CRITICAL"' build/reports/dependency-check-report.json | wc -l || echo "0")
            if [ "$high_critical" -gt 0 ]; then
              echo "⚠️ Found $high_critical HIGH/CRITICAL vulnerabilities!"
              echo "Please review the OWASP report in the artifacts."
              exit 1
            else
              echo "✅ No HIGH/CRITICAL vulnerabilities found."
            fi
          else
            echo "⚠️ OWASP report not found, check previous step."
            exit 1
          fi

  build-services:
    runs-on: self-hosted
    needs: security-scan
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21

      - name: Make gradlew executable
        run: chmod +x be-components/gradlew

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle-wrapper.properties') }}

      - name: Get changed services
        id: changed-services
        uses: tj-actions/changed-files@v45
        with:
          files: be-components/**
          dir_names: true
          dir_names_max_depth: 2

      - name: Build changed services
        working-directory: be-components
        run: |
          changed_dirs="${{ steps.changed-services.outputs.all_changed_files }}"
          services_to_build=""

          # Extract unique service names
          unique_services=$(for dir in $changed_dirs; do
            service_name=$(basename "$dir")
            if [ "$service_name" != "be-components" ] && [ "$service_name" != "gradle" ] && [ -d "$service_name" ] && [ -f "$service_name/build.gradle.kts" ]; then
              echo "$service_name"
            fi
          done | sort -u)

          for service in $unique_services; do
            echo "Found changed service: $service"
            services_to_build="$services_to_build :$service:build"
          done

          if [ -n "$services_to_build" ]; then
            echo "Building services:$services_to_build"
            ./gradlew $services_to_build --parallel --build-cache
          else
            echo "No services to build"
          fi

      - name: Cleanup
        if: always()
        working-directory: be-components
        run: |
          ./gradlew clean --stop || true
        continue-on-error: true
